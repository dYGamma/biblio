# gui/dashboard_window.py
_app_context = {}
from PyQt5 import QtWidgets, QtCore
from utils.theme_manager import toggle_theme, update_theme_ui
from gui.book_manager_page import BookManagerPage
from gui.order_manager_page import OrderManagerPage
from gui.report_page import ReportPage
from gui.user_manager_page import UserManagerPage
from gui.librarian_manager_page import LibrarianManagerPage
from gui.student_page import StudentPage
import logging

logger = logging.getLogger(__name__)

class MainWindow(QtWidgets.QMainWindow):
    def __init__(self, user, make_login_dialog):
        super().__init__()
        self.user = user
        self.make_login_dialog = make_login_dialog

        # ---
        self.setWindowTitle(f"–®–∫–æ–ª—å–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ ‚Äî {user.role.capitalize()}")
        self.resize(1920, 1080)

        # –í–µ—Ä—Ö–Ω–∏–π –±–∞—Ä
        top_bar = QtWidgets.QWidget()
        hl = QtWidgets.QHBoxLayout(top_bar)
        hl.setContentsMargins(8,8,8,4)
        hl.setSpacing(4)

        # –ù–∞–≤–∏–≥–∞—Ü–∏—è
        self.tab_bar = QtWidgets.QTabBar()
        self.tab_bar.setExpanding(True)
        self.tab_bar.setDrawBase(False)
        self.stack = QtWidgets.QStackedWidget()

        if user.role == 'student':
            # –°—Ç—É–¥–µ–Ω—Ç
            self.tab_bar.addTab("üîç –ü–æ–∏—Å–∫ –∏ –ó–∞–∫–∞–∑—ã")
            self.page_student = StudentPage(user.id)
            self.stack.addWidget(self.page_student)

        else:
            # 1. –ö–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥
            self.tab_bar.addTab("üìö –ö–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥")
            self.page_books = BookManagerPage()
            self.stack.addWidget(self.page_books)

            # 2. –ó–∞–∫–∞–∑—ã
            self.tab_bar.addTab("üîñ –ó–∞–∫–∞–∑—ã")
            self.page_orders = OrderManagerPage()
            self.stack.addWidget(self.page_orders)

            # ‚Äî –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∑–∞–∫–∞–∑–∞—Ö –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–∞—Ç–∞–ª–æ–≥
            self.page_orders.reload_request.connect(self.page_books.reload)

            # 3. –û—Ç—á—ë—Ç—ã
            self.tab_bar.addTab("üìë –û—Ç—á—ë—Ç—ã")
            self.page_reports = ReportPage()
            self.stack.addWidget(self.page_reports)

            # 4. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ / –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä–∏
            if user.role == 'librarian':
                self.tab_bar.addTab("üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
                self.page_users = UserManagerPage()
                self.stack.addWidget(self.page_users)
            if user.role == 'admin':
                self.tab_bar.addTab("üõ† –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä–∏")
                self.page_libs = LibrarianManagerPage()
                self.stack.addWidget(self.page_libs)

        # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–±–æ–≤
        self.tab_bar.currentChanged.connect(self.on_nav_changed)
        hl.addWidget(self.tab_bar, stretch=1)

        # –ö–Ω–æ–ø–∫–∏ —Å–ø—Ä–∞–≤–∞
        btn_switch = QtWidgets.QPushButton()
        btn_switch.setFixedSize(32,32)
        btn_switch.clicked.connect(self.on_switch_account)
        hl.addWidget(btn_switch, QtCore.Qt.AlignRight)

        btn_theme = QtWidgets.QPushButton()
        btn_theme.setFixedSize(32,32)
        btn_theme.clicked.connect(lambda: toggle_theme(btn_theme, None, btn_switch))
        hl.addWidget(btn_theme, QtCore.Qt.AlignRight)

        update_theme_ui(btn_theme, None, btn_switch)

        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central = QtWidgets.QWidget()
        vbox = QtWidgets.QVBoxLayout(central)
        vbox.setContentsMargins(0,0,0,0)
        vbox.setSpacing(0)
        vbox.addWidget(top_bar)
        vbox.addWidget(self.stack)
        self.setCentralWidget(central)

        # –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–π —Ç–∞–±
        self.tab_bar.setCurrentIndex(0)
        self.stack.setCurrentIndex(0)

        logger.info("MainWindow initialized for %s", user.id)

    def on_nav_changed(self, index: int):
        self.stack.setCurrentIndex(index)

    def on_switch_account(self):
        dlg = self.make_login_dialog()
        if dlg.exec_():
            new_user = dlg.user
            from gui.dashboard_window import MainWindow

            # —Å–æ–∑–¥–∞—ë–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–æ–≤–æ–µ –æ–∫–Ω–æ
            new_win = MainWindow(new_user, self.make_login_dialog)
            _app_context["main_window"] = new_win  # —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏, —á—Ç–æ–±—ã –Ω–µ —É–¥–∞–ª–∏–ª—Å—è

            # new_win.show()
            new_win.showFullScreen()
            self.close()
